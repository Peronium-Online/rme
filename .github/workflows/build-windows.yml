---
name: Build - Windows

on:
  workflow_dispatch:
  pull_request:
  push:
    branches:
      - master

env:
  CMAKE_BUILD_PARALLEL_LEVEL: 2
  MAKEFLAGS: '-j 2'
  VCPKG_DEFAULT_TRIPLET: x64-windows

jobs:
  job:
    name: ${{ matrix.os }}-${{ matrix.buildtype }}
    runs-on: ${{ matrix.os }}
    strategy:
      matrix:
        os: [windows-2022]
        buildtype: [windows-release]

    steps:
      - name: Checkout repository
        uses: actions/checkout@main

      - name: CCache
        uses: hendrikmuhs/ccache-action@main
        with:
          max-size: "1G"
          variant: "sccache"
          key: ccache-${{ matrix.os }}-${{ matrix.buildtype }}
          restore-keys: |
            ccache-${{ matrix.os }}

      - name: Restore artifacts and install vcpkg
        uses: lukka/run-vcpkg@v10
        with:
          runVcpkgInstall: true
          vcpkgGitCommitId: 1c48ec7f49d69bb753e6afefba51368e18263255

      - name: Run vcpkg integrate install
        run: ${{ env.VCPKG_ROOT }}/vcpkg integrate install

      - name: Checking vcpkg folder
        run: ls .

      - name: Get latest CMake
        uses: lukka/get-cmake@latest

      - name: Run CMake
        uses: lukka/run-cmake@v10
        with:
          configurePreset: ${{ matrix.buildtype }}
          buildPreset: ${{ matrix.buildtype }}
          buildPresetAdditionalArgs: "['--config Release']"

      - name: Create and Upload Artifact (exe)
        uses: actions/upload-artifact@main
        with:
          name: rme-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}/build/${{ matrix.buildtype }}/rme.exe

      - name: Create and Upload Artifact (dlls)
        uses: actions/upload-artifact@main
        with:
          name: rme-${{ matrix.buildtype }}-${{ github.sha }}
          path: |
            ${{ github.workspace }}/build/${{ matrix.buildtype }}/*.dll

